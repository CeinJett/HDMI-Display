/*
  EDID I2C-EEPROM Programmer
  
  Note: SDA and SCL jumpers have to be closed.
 */

#include <Wire.h>

#define EEPROMSIZE 256
#define EEPROMADDR 0x50

#define LED_1      5 //first LED PC6
#define LED_2     13 //second LED PC7
#define BACKLIGHT  9 //backlight control PB5
#define SW_1      (1<<5) //switch PD5

#define AXM        A1 //PF6
#define AXP        A3 //PF4
#define AYM        A2 //PF5
#define AYP        A0 //PF7
#define INT        4  //PD4

//uncomment for 480x272 display
/*const uint8_t PROGMEM eepromdata[128] =
{
  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x5C,0x34,0x01,0x00,0x01,0x00,0x00,0x00,
  0x01,0x19,0x01,0x03,0x81,0x00,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  0x01,0x01,0x01,0x01,0x01,0x01,0xC4,0x09,0xE0,0x33,0x10,0x10,0x14,0x10,0x08,0x05,
  0x4A,0x00,0xE0,0x10,0x11,0x00,0x00,0x18,0x00,0x00,0x00,0xFC,0x00,0x48,0x44,0x4D,
  0x49,0x20,0x44,0x49,0x53,0x50,0x4C,0x41,0x59,0x0A,0x00,0x00,0x00,0x10,0x00,0x01,
  0x00,0x0A,0x00,0x0A,0x00,0x0A,0x0A,0x0A,0x0A,0x0A,0x20,0x0A,0x00,0x00,0x00,0x10,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38
};*/

//uncomment for 800x480 display
const uint8_t PROGMEM eepromdata[128] =
{
  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x5C,0x34,0x01,0x00,0x01,0x00,0x00,0x00,
  0x01,0x19,0x01,0x03,0x80,0x00,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  0x01,0x01,0x01,0x01,0x01,0x01,0x80,0x0C,0x20,0x80,0x30,0xE0,0x2D,0x10,0x28,0x30,
  0xD3,0x00,0x20,0xE0,0x31,0x00,0x00,0x18,0x00,0x00,0x00,0xFC,0x00,0x48,0x44,0x4D,
  0x49,0x20,0x44,0x49,0x53,0x50,0x4C,0x41,0x59,0x0A,0x00,0x00,0x00,0x10,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x51
};

//uncomment for 800x480 display with 720x480 (480p) fallback
/*const uint8_t PROGMEM eepromdata[128] =
{
  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x5C,0x34,0x01,0x00,0x01,0x00,0x00,0x00,
  0x01,0x19,0x01,0x03,0x80,0x00,0x00,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  0x01,0x01,0x01,0x01,0x01,0x01,0x80,0x0C,0x20,0x80,0x30,0xE0,0x2D,0x10,0x28,0x30,
  0xD3,0x00,0x20,0xE0,0x31,0x00,0x00,0x18,0x00,0x00,0x00,0xFC,0x00,0x48,0x44,0x4D,
  0x49,0x20,0x44,0x49,0x53,0x50,0x4C,0x41,0x59,0x0A,0x8C,0x0A,0xD0,0x6C,0x20,0xE0,
  0x1E,0x10,0x10,0x3E,0x96,0x00,0xD0,0xE0,0x21,0x00,0x00,0x18,0x00,0x00,0x00,0x10,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x94
};*/

byte eeprom_read_byte(uint16_t addr)
{
  Wire.beginTransmission(EEPROMADDR);
  Wire.write((byte)addr);
  Wire.endTransmission();
  Wire.requestFrom(EEPROMADDR, 1);
  while(!Wire.available());
  return Wire.read();
}

void eeprom_write_byte(uint16_t addr, byte data)
{
  Wire.beginTransmission(EEPROMADDR);
  Wire.write((byte)addr);
  Wire.write((byte)data);
  Wire.endTransmission();
}

void setup()
{
  //set pin to input, because USB serial using this as an output (txled)
  DDRD &= ~SW_1;
  PORTD |= SW_1;
  //set analog pins to input
  pinMode(AXM, INPUT);
  pinMode(AXP, INPUT);
  pinMode(AYM, INPUT);
  pinMode(AYP, INPUT);
  pinMode(INT, INPUT);
  //set LEDs
  pinMode(LED_1, OUTPUT);
  digitalWrite(LED_1, HIGH); //on
  pinMode(LED_2, OUTPUT);
  digitalWrite(LED_2, LOW); //off
  //set backlight
  pinMode(BACKLIGHT, OUTPUT);
  digitalWrite(BACKLIGHT, LOW); //off

  Serial.begin(9600); //9600 baud
  while(!Serial); //wait for serial port to connect
  Serial.println(F("I2C-EEPROM WRITER"));
  Serial.println(F("Hit any key to start"));
  while(!Serial.available() && (PIND & SW_1)); //wait for serial data or button press

  Serial.println(F("Writing..."));
  digitalWrite(LED_1, LOW); //off
  digitalWrite(LED_2, HIGH); //on
  Wire.begin();
  for(uint16_t addr=0; addr < EEPROMSIZE; addr++)
  {
    byte b;
    if(addr < sizeof(eepromdata))
    {
      b = pgm_read_byte(eepromdata+addr);
    }
    else
    {
      b = 0xFF;
    }
    eeprom_write_byte(addr, b);
    delay(5);
  }
  Serial.print(F("Done."));

  Serial.println(F("\n\rVerifying..."));
  for(uint16_t addr=0; addr < EEPROMSIZE; addr++)
  {
    byte b, d;
    if (addr < sizeof(eepromdata))
    {
      b = pgm_read_byte(eepromdata+addr);
    }
    else
    {
      b = 0xFF;
    }
    d = eeprom_read_byte(addr);
    if (b != d)
    {
      Serial.print(F("failed at 0x")); Serial.println(addr);
      while(1);
    }
  }
  digitalWrite(LED_1, HIGH); //on
  digitalWrite(LED_2, HIGH); //on
  Serial.print(F("Done."));
}
 
void loop()
{
}
